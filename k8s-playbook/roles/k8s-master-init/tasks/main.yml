---
- name: Check if cluster is already initialized
  stat:
    path: /etc/kubernetes/admin.conf
  register: k8s_admin_conf

- name: Pull kube-vip image
  shell: |
    crictl --debug pull artifactory-virtual.caas.in.pan-net.eu/kube-vip/kube-vip:{{ kube_vip_version }}
    ctr images pull artifactory-virtual.caas.in.pan-net.eu/kube-vip/kube-vip:{{ kube_vip_version }}

- name: Create kubernetes manifests directory
  file:
    path: /etc/kubernetes/manifests
    state: directory
    mode: '0755'

- name: Generate kube-vip manifest
  shell: |
    ctr --namespace k8s.io run --rm --net-host \
      artifactory-virtual.caas.in.pan-net.eu/kube-vip/kube-vip:{{ kube_vip_version }} vip \
      /kube-vip manifest pod \
        --arp \
        --interface {{ dth_interface }} \
        --vip {{ k8s_api_ip }} \
        --controlplane \
        --leaderElection > /etc/kubernetes/manifests/kube-vip.yaml

- name: Fix kube-vip admin.conf path for initialization
  replace:
    path: /etc/kubernetes/manifests/kube-vip.yaml
    regexp: 'path: /etc/kubernetes/admin.conf'
    replace: 'path: /etc/kubernetes/super-admin.conf'
  when: not k8s_admin_conf.stat.exists

- name: Fix kube-vip image registry
  replace:
    path: /etc/kubernetes/manifests/kube-vip.yaml
    regexp: 'ghcr.io'
    replace: 'artifactory-virtual.caas.in.pan-net.eu'

- name: Create kubeadm config
  template:
    src: kubeadm-config.yaml.j2
    dest: /root/kubeadm-config.yaml
  when: not k8s_admin_conf.stat.exists

- name: Initialize Kubernetes cluster
  shell: kubeadm init --config /root/kubeadm-config.yaml --skip-phases addon/coredns,addon/kube-proxy --upload-certs
  register: kubeadm_init_result
  when: not k8s_admin_conf.stat.exists

- name: Wait for API server to be ready after init
  wait_for:
    port: 6443
    host: "127.0.0.1"
    timeout: 120
  when: not k8s_admin_conf.stat.exists and kubeadm_init_result is defined

- name: Fix kube-vip admin.conf path after init
  replace:
    path: /etc/kubernetes/manifests/kube-vip.yaml
    regexp: 'path: /etc/kubernetes/super-admin.conf'
    replace: 'path: /etc/kubernetes/admin.conf'
  when: not k8s_admin_conf.stat.exists

# SIMPLE TOKEN GENERATION (matching bash script order)
- name: Generate certificate key
  shell: kubeadm certs certificate-key
  register: cert_key
  changed_when: false

- name: Generate master join command (first, like in bash script)
  shell: kubeadm token create --print-join-command --certificate-key {{ cert_key.stdout }}
  register: master_join_cmd
  changed_when: false

- name: Upload certificates (second, like in bash script)
  shell: kubeadm init phase upload-certs --certificate-key {{ cert_key.stdout }} --upload-certs
  changed_when: false

- name: Set join facts
  set_fact:
    kubeadm_token: "{{ (master_join_cmd.stdout | regex_search('--token\\s+(\\S+)', '\\1'))[0] }}"
    kubeadm_discovery_hash: "{{ (master_join_cmd.stdout | regex_search('--discovery-token-ca-cert-hash\\s+(\\S+)', '\\1'))[0] }}"
    kubeadm_cert_key: "{{ cert_key.stdout }}"

- name: Display join information
  debug:
    msg:
      - "Token: {{ kubeadm_token }}"
      - "Discovery Hash: {{ kubeadm_discovery_hash }}"
      - "Certificate Key: {{ kubeadm_cert_key }}"
